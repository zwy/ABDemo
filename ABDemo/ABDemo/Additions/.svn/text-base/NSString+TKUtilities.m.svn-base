//
//  NSString+TKUtilities.m
//  TKContactsMultiPicker
//
//  Created by Jongtae Ahn on 12. 8. 31..
//  Copyright (c) 2012년 TABKO Inc. All rights reserved.
//

#import <CoreLocation/CoreLocation.h>
#import "NSString+TKUtilities.h"

@implementation NSString (TKUtilities)

- (BOOL)containsString:(NSString *)aString
{
	NSRange range = [[self lowercaseString] rangeOfString:[aString lowercaseString]];
	return range.location != NSNotFound;
}

- (BOOL)isURL
{   
    NSString *lagoNoRegex = @"^(http://|https://){0,1}[A-Za-z0-9][A-Za-z0-9-.]+[A-Za-z0-9].[A-Za-z]{2,}[43-176]*$";
    NSPredicate *lagoNoTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", lagoNoRegex];
    return [lagoNoTest evaluateWithObject:self];
}
- (NSString*)telephoneWithReformat
{
    NSString *str = self;
    if ([str containsString:@"-"])
    {
        str = [str stringByReplacingOccurrencesOfString:@"-" withString:@""];
    }
    
    if ([str containsString:@" "])
    {
        str = [str stringByReplacingOccurrencesOfString:@" " withString:@""];
    }
    
    if ([str containsString:@"("])
    {
        str = [str stringByReplacingOccurrencesOfString:@"(" withString:@""];
    }
    
    if ([str containsString:@")"])
    {
        str = [str stringByReplacingOccurrencesOfString:@")" withString:@""];
    }
    if ([str containsString:@" "])
    {
        str = [str stringByReplacingOccurrencesOfString:@" " withString:@""];
    }
    
    return str;
}

unsigned char strToChar (char a, char b)
{
    char encoder[3] = {'\0','\0','\0'};
    encoder[0] = a;
    encoder[1] = b;
    return (char) strtol(encoder,NULL,16);
}

- (NSData *) decodeFromHexidecimal;
{
    const char * bytes = [self cStringUsingEncoding: NSUTF8StringEncoding];
    NSUInteger length = strlen(bytes);
    unsigned char * r = (unsigned char *) malloc(length / 2 + 1);
    unsigned char * index = r;
    
    while ((*bytes) && (*(bytes +1))) {
        *index = strToChar(*bytes, *(bytes +1));
        index++;
        bytes+=2;
    }
    *index = '\0';
    
    NSData * result = [NSData dataWithBytes: r length: length / 2];
    free(r);
    
    return result;
}
@end
